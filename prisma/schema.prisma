generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_PUBLIC_USER_DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?   @db.Text
  access_token       String?   @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?   @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  phoneNumber   String?
  location      UserLocation?
  disasterUpdates Boolean @default(true)
  accounts Account[]
  sessions Session[]
}

model UserLocation {
  id        String   @id @default(cuid())
  userId    String   @unique
  city      String?   
  region    String?
  country   String?
  latitude  Float?
  longitude Float?
  ip        String?
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Media {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Report {
  id              String    @id @default(cuid())
  title           String
  description     String
  datetime        DateTime
  categories      String[]
  fullName        String?
  email           String?
  phoneNumber     String?
  locationLandmark String
  newsSourceLink  String?
  mediaUrls       String[]
  latitude        Float
  longitude       Float
  locationAddress String
  status          String    @default("PENDING")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}